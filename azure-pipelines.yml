name: $(Build.BuildId)

trigger:
- master
- dev

stages:
  - stage: Build
    jobs:
      - job:
        pool:
          vmImage: 'ubuntu-latest'
        steps:
        - task: CacheBeta@0
          inputs:
            key: |
              RAMShop
              docker
              $(SERVICE_NAME)
            path: $(Build.ArtifactStagingDirectory)
          displayName: Cache Docker image

        - script: |
            docker load -i $(Build.ArtifactStagingDirectory)/docker_cache_$(SERVICE_NAME).tar || exit 0
          displayName: Load Docker image and layers
          continueOnError: true

        - task: AzureCLI@1
          displayName: "Build and push image"
          inputs:
            azureSubscription: $(AZURE_SUBSCRIPTION)
            scriptLocation: inlineScript
            inlineScript: "pwsh .ci/deploy-service.ps1 -buildOnly -service $(SERVICE_NAME)"

        - script: docker save $(SERVICE_NAME):$(Build.BuildId) $(docker history -q $(SERVICE_NAME):$(Build.BuildId) | grep -v "<missing>") -o $(Build.ArtifactStagingDirectory)/docker_cache_$(SERVICE_NAME).tar
          displayName: "Save docker cache"

        - publish: .ci/deploy-service.ps1
          artifact: ci

  - stage: Deploy_dev
    dependsOn: [Build]
    jobs:
      - deployment: Deploy_dev
        pool:
          vmImage: 'Ubuntu-latest'
        
        environment: dev
        strategy:
          runOnce:
            deploy:
              steps:
              - download: current
                artifact: ci
              - task: AzureCLI@1
                displayName: "Deploy service"
                inputs:
                  azureSubscription: $(AZURE_SUBSCRIPTION)
                  scriptLocation: inlineScript
                  inlineScript: "pwsh $(Pipeline.Workspace)/ci/deploy-service.ps1 -azureDevOps -service $(SERVICE_NAME) -environmentShort dev"
      - job: Integration_tests
        dependsOn: Deploy_dev
        pool:
          vmImage: Ubuntu-latest
        steps:
          - script: "echo integration tests"
  